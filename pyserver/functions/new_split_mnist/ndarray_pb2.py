# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ndarray.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ndarray.proto',
  package='parameter',
  syntax='proto3',
  serialized_pb=_b('\n\rndarray.proto\x12\tparameter\"6\n\x07NDArray\x12\r\n\x05\x61rray\x18\x01 \x03(\x01\x12\r\n\x05shape\x18\x02 \x03(\x05\x12\r\n\x05\x64type\x18\x03 \x01(\t\"@\n\rNDArrayPacked\x12\x11\n\x05\x61rray\x18\x01 \x03(\x01\x42\x02\x10\x01\x12\r\n\x05shape\x18\x02 \x03(\x05\x12\r\n\x05\x64type\x18\x03 \x01(\t\"@\n\x0cNDArrayBytes\x12\x12\n\ndata_bytes\x18\x01 \x01(\x0c\x12\r\n\x05shape\x18\x02 \x03(\x05\x12\r\n\x05\x64type\x18\x03 \x01(\tb\x06proto3')
)




_NDARRAY = _descriptor.Descriptor(
  name='NDArray',
  full_name='parameter.NDArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='array', full_name='parameter.NDArray.array', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='parameter.NDArray.shape', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='parameter.NDArray.dtype', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=82,
)


_NDARRAYPACKED = _descriptor.Descriptor(
  name='NDArrayPacked',
  full_name='parameter.NDArrayPacked',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='array', full_name='parameter.NDArrayPacked.array', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='parameter.NDArrayPacked.shape', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='parameter.NDArrayPacked.dtype', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=148,
)


_NDARRAYBYTES = _descriptor.Descriptor(
  name='NDArrayBytes',
  full_name='parameter.NDArrayBytes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_bytes', full_name='parameter.NDArrayBytes.data_bytes', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='parameter.NDArrayBytes.shape', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='parameter.NDArrayBytes.dtype', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=214,
)

DESCRIPTOR.message_types_by_name['NDArray'] = _NDARRAY
DESCRIPTOR.message_types_by_name['NDArrayPacked'] = _NDARRAYPACKED
DESCRIPTOR.message_types_by_name['NDArrayBytes'] = _NDARRAYBYTES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NDArray = _reflection.GeneratedProtocolMessageType('NDArray', (_message.Message,), dict(
  DESCRIPTOR = _NDARRAY,
  __module__ = 'ndarray_pb2'
  # @@protoc_insertion_point(class_scope:parameter.NDArray)
  ))
_sym_db.RegisterMessage(NDArray)

NDArrayPacked = _reflection.GeneratedProtocolMessageType('NDArrayPacked', (_message.Message,), dict(
  DESCRIPTOR = _NDARRAYPACKED,
  __module__ = 'ndarray_pb2'
  # @@protoc_insertion_point(class_scope:parameter.NDArrayPacked)
  ))
_sym_db.RegisterMessage(NDArrayPacked)

NDArrayBytes = _reflection.GeneratedProtocolMessageType('NDArrayBytes', (_message.Message,), dict(
  DESCRIPTOR = _NDARRAYBYTES,
  __module__ = 'ndarray_pb2'
  # @@protoc_insertion_point(class_scope:parameter.NDArrayBytes)
  ))
_sym_db.RegisterMessage(NDArrayBytes)


_NDARRAYPACKED.fields_by_name['array'].has_options = True
_NDARRAYPACKED.fields_by_name['array']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
