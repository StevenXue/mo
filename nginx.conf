# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen *:8899;
    access_log /var/log/nginx/mo.access.log main;

    location / {
        proxy_pass http://localhost:8989;

        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /pyapi/ {
        proxy_pass http://localhost:5005/;
    }

    location /tb/ {
        proxy_pass http://localhost:8111;
    }

    location /hub_api/ {
		set $auth $http_authorization;

	    if ($http_accept ~ image) {
            set $auth 'token 1d4afa72b00c4ffd9db82f26e1628f89';
        }
	    proxy_set_header Authorization $auth;
	    rewrite ^ $request_uri;
        rewrite ^/hub_api/(.*) $1 break;
        return 400; #if the second rewrite won't match
        proxy_pass http://127.0.0.1:8000/$uri;

	    # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
   }

    # TODO proxy for socket io not work yet------------------------------
    location /socketio/ {
        proxy_pass http://localhost:5005;

        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /socket.io/ {
        proxy_pass http://localhost:5005;

		# websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /sockjs\-node/ {
        proxy_pass http://localhost:5005;

	    # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}